{"ast":null,"code":"import { environment } from \"../environments/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport const LISTUSERS_URL = environment.listUsersUrl;\nexport const USER_URL = environment.UserUrl;\nexport class ListUsersService {\n  constructor(httpClient, router) {\n    this.httpClient = httpClient;\n    this.router = router;\n  }\n  listUsers(page, size) {\n    return this.httpClient.get(LISTUSERS_URL + '/' + page + '/' + size);\n  }\n  deleteUser(id) {\n    const url = `${USER_URL}/${id}`;\n    return this.httpClient.delete(url);\n  }\n  patchUser(data, id) {\n    const url = `${USER_URL}/${id}`;\n    return this.httpClient.patch(url, data);\n  }\n  countUsers() {\n    return this.httpClient.get(USER_URL + '/userCount');\n  }\n}\nListUsersService.ɵfac = function ListUsersService_Factory(t) {\n  return new (t || ListUsersService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\nListUsersService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ListUsersService,\n  factory: ListUsersService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["environment","LISTUSERS_URL","listUsersUrl","USER_URL","UserUrl","ListUsersService","constructor","httpClient","router","listUsers","page","size","get","deleteUser","id","url","delete","patchUser","data","patch","countUsers","i0","ɵɵinject","i1","HttpClient","i2","Router","factory","ɵfac","providedIn"],"sources":["C:\\Users\\21651\\Downloads\\GeoTrackr-developFront\\GeoTrackr-developFront\\src\\services\\list-users.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\nimport {User} from \"../models/User\";\nimport { environment } from \"../environments/environment\";\nimport {Observable} from \"rxjs\";\nexport const LISTUSERS_URL=environment.listUsersUrl;\nexport const USER_URL=environment.UserUrl\n@Injectable({\n  providedIn: 'root'\n})\nexport class ListUsersService {\n\n  constructor( private httpClient: HttpClient,\n\n               private router: Router) {}\n\n  listUsers(page:number,size:number){\n    return this.httpClient.get<User[]>(<string>LISTUSERS_URL+'/'+page+'/'+size)\n  }\n  deleteUser(id:number){\n    const url = `${USER_URL}/${id}`;\n    return this.httpClient.delete<User>(<string>url)\n  }\n\n  patchUser(data:any,id:number): Observable<User>\n  {\n    const url = `${USER_URL}/${id}`;\n    return this.httpClient.patch<User>(url,data);\n  }\n  countUsers(){\n    return this.httpClient.get<number>(<string>USER_URL+'/userCount')\n  }\n\n}\n\n\n\n\n\n\n"],"mappings":"AAIA,SAASA,WAAW,QAAQ,6BAA6B;;;;AAEzD,OAAO,MAAMC,aAAa,GAACD,WAAW,CAACE,YAAY;AACnD,OAAO,MAAMC,QAAQ,GAACH,WAAW,CAACI,OAAO;AAIzC,OAAM,MAAOC,gBAAgB;EAE3BC,YAAqBC,UAAsB,EAEtBC,MAAc;IAFd,KAAAD,UAAU,GAAVA,UAAU;IAEV,KAAAC,MAAM,GAANA,MAAM;EAAW;EAEtCC,SAASA,CAACC,IAAW,EAACC,IAAW;IAC/B,OAAO,IAAI,CAACJ,UAAU,CAACK,GAAG,CAAiBX,aAAa,GAAC,GAAG,GAACS,IAAI,GAAC,GAAG,GAACC,IAAI,CAAC;EAC7E;EACAE,UAAUA,CAACC,EAAS;IAClB,MAAMC,GAAG,GAAG,GAAGZ,QAAQ,IAAIW,EAAE,EAAE;IAC/B,OAAO,IAAI,CAACP,UAAU,CAACS,MAAM,CAAeD,GAAG,CAAC;EAClD;EAEAE,SAASA,CAACC,IAAQ,EAACJ,EAAS;IAE1B,MAAMC,GAAG,GAAG,GAAGZ,QAAQ,IAAIW,EAAE,EAAE;IAC/B,OAAO,IAAI,CAACP,UAAU,CAACY,KAAK,CAAOJ,GAAG,EAACG,IAAI,CAAC;EAC9C;EACAE,UAAUA,CAAA;IACR,OAAO,IAAI,CAACb,UAAU,CAACK,GAAG,CAAiBT,QAAQ,GAAC,YAAY,CAAC;EACnE;;AArBWE,gBAAgB,C;mBAAhBA,gBAAgB,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;AAAhBrB,gBAAgB,C;SAAhBA,gBAAgB;EAAAsB,OAAA,EAAhBtB,gBAAgB,CAAAuB,IAAA;EAAAC,UAAA,EAFf;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}