{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TraceService {\n  constructor(http) {\n    this.http = http;\n    this.apiServerUrl = environment.apiUrl;\n  }\n  getTraces() {\n    return this.http.get(`${this.apiServerUrl}/trace/all`);\n  }\n  getValideTraces() {\n    return this.http.get(`${this.apiServerUrl}/trace/ValideTraces`);\n  }\n  getBrouillons() {\n    return this.http.get(`${this.apiServerUrl}/trace/Brouillons`);\n  }\n  addTraceByAdmin(trace) {\n    return this.http.post(`${this.apiServerUrl}/trace/addbyadmin`, trace);\n  }\n  addTrace(trace) {\n    return this.http.post(`${this.apiServerUrl}/trace/add`, trace);\n  }\n  updateTrace(data, id) {\n    return this.http.patch(`${this.apiServerUrl}/trace/` + id, data);\n  }\n  deleteTrace(traceId) {\n    return this.http.delete(`${this.apiServerUrl}/trace/delete/${traceId}`);\n  }\n}\nTraceService.ɵfac = function TraceService_Factory(t) {\n  return new (t || TraceService)(i0.ɵɵinject(i1.HttpClient));\n};\nTraceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TraceService,\n  factory: TraceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["environment","TraceService","constructor","http","apiServerUrl","apiUrl","getTraces","get","getValideTraces","getBrouillons","addTraceByAdmin","trace","post","addTrace","updateTrace","data","id","patch","deleteTrace","traceId","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\21651\\Desktop\\projet-talan\\projet-talan\\GeoTrackr-developFront\\src\\services\\trace.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, catchError } from 'rxjs';\nimport { Trace } from '../models/trace';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({providedIn: 'root'})\nexport class TraceService {\n  private apiServerUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient){}\n\n  public getTraces(): Observable<Trace[]> {\n    return this.http.get<Trace[]>(`${this.apiServerUrl}/trace/all`);\n  }\n\n  public getValideTraces(): Observable<Trace[]> {\n    return this.http.get<Trace[]>(`${this.apiServerUrl}/trace/ValideTraces`);\n  }\n  public getBrouillons(): Observable<Trace[]> {\n    return this.http.get<Trace[]>(`${this.apiServerUrl}/trace/Brouillons`);\n  }\n\n\n  public addTraceByAdmin(trace: Trace): Observable<Trace> {\n    return this.http.post<Trace>(`${this.apiServerUrl}/trace/addbyadmin`, trace);\n  }\n  public addTrace(trace: Trace): Observable<Trace> {\n    return this.http.post<Trace>(`${this.apiServerUrl}/trace/add`, trace);\n  }\n\n\n\n  public updateTrace(data:any,id: Number): Observable<Trace> {\n    return this.http.patch<Trace>(`${this.apiServerUrl}/trace/`+id,data);\n  }\n\n  public deleteTrace(traceId: number): Observable<void> {\n    return this.http.delete<void>(`${this.apiServerUrl}/trace/delete/${traceId}`);\n  }\n\n\n}\n"],"mappings":"AAIA,SAASA,WAAW,QAAQ,8BAA8B;;;AAG1D,OAAM,MAAOC,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,YAAY,GAAGJ,WAAW,CAACK,MAAM;EAEH;EAE/BC,SAASA,CAAA;IACd,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAU,GAAG,IAAI,CAACH,YAAY,YAAY,CAAC;EACjE;EAEOI,eAAeA,CAAA;IACpB,OAAO,IAAI,CAACL,IAAI,CAACI,GAAG,CAAU,GAAG,IAAI,CAACH,YAAY,qBAAqB,CAAC;EAC1E;EACOK,aAAaA,CAAA;IAClB,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAU,GAAG,IAAI,CAACH,YAAY,mBAAmB,CAAC;EACxE;EAGOM,eAAeA,CAACC,KAAY;IACjC,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAQ,GAAG,IAAI,CAACR,YAAY,mBAAmB,EAAEO,KAAK,CAAC;EAC9E;EACOE,QAAQA,CAACF,KAAY;IAC1B,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAQ,GAAG,IAAI,CAACR,YAAY,YAAY,EAAEO,KAAK,CAAC;EACvE;EAIOG,WAAWA,CAACC,IAAQ,EAACC,EAAU;IACpC,OAAO,IAAI,CAACb,IAAI,CAACc,KAAK,CAAQ,GAAG,IAAI,CAACb,YAAY,SAAS,GAACY,EAAE,EAACD,IAAI,CAAC;EACtE;EAEOG,WAAWA,CAACC,OAAe;IAChC,OAAO,IAAI,CAAChB,IAAI,CAACiB,MAAM,CAAO,GAAG,IAAI,CAAChB,YAAY,iBAAiBe,OAAO,EAAE,CAAC;EAC/E;;AAhCWlB,YAAY,C;mBAAZA,YAAY,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAZvB,YAAY,C;SAAZA,YAAY;EAAAwB,OAAA,EAAZxB,YAAY,CAAAyB,IAAA;EAAAC,UAAA,EADA;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}