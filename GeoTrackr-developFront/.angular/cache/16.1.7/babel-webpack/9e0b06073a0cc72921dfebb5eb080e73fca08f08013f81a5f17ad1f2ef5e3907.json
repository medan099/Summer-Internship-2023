{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport Swal from \"sweetalert2\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../../services/authentication.service\";\nexport class ResetPasswordComponent {\n  constructor(route, formBuilder, authenticationService) {\n    this.route = route;\n    this.formBuilder = formBuilder;\n    this.authenticationService = authenticationService;\n    this.resetForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]]\n    });\n  }\n  resetPassword() {\n    const email = this.resetForm.get('email')?.value;\n    console.log(email);\n    this.authenticationService.getUserByEmail(email).subscribe(data => {\n      this.user = data;\n      console.log(this.user[\"resetToken\"]);\n      this.route.paramMap.subscribe(params => {\n        const resetToken = params.get(this.user[\"resetToken\"]);\n        localStorage.setItem(\"resetToken\", this.user[\"resetToken\"]);\n        // Now you can use the 'resetToken' parameter in your component logic\n        console.log('Reset Token:', resetToken);\n      });\n    });\n    this.authenticationService.resetPassword(email).subscribe(data => {\n      Swal.fire({\n        icon: 'success',\n        title: 'Email a été envoyé à votre adresse mail',\n        showConfirmButton: false,\n        timer: 3500\n      });\n      location.reload();\n      localStorage.setItem(\"resetMail\", email);\n      console.log('Password reset email sent successfully!');\n    });\n  }\n}\nResetPasswordComponent.ɵfac = function ResetPasswordComponent_Factory(t) {\n  return new (t || ResetPasswordComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.AuthenticationService));\n};\nResetPasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ResetPasswordComponent,\n  selectors: [[\"app-reset-password\"]],\n  decls: 8,\n  vars: 1,\n  consts: [[1, \"form-group\"], [1, \"reset-form\", 3, \"formGroup\"], [\"for\", \"email\", 1, \"form-label\"], [\"name\", \"email\", \"formControlName\", \"email\", \"type\", \"email\", \"id\", \"email\", 1, \"form-input\"], [1, \"submit-button\", 3, \"click\"]],\n  template: function ResetPasswordComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\")(2, \"form\", 1)(3, \"label\", 2);\n      i0.ɵɵtext(4, \"Adresse mail:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"input\", 3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function ResetPasswordComponent_Template_button_click_6_listener() {\n        return ctx.resetPassword();\n      });\n      i0.ɵɵtext(7, \"Submit\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.resetForm);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"*[_ngcontent-%COMP%]{\\n\\n}\\n\\n.form-group[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 100vh;\\n}\\n\\n.reset-form[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n}\\n\\n.form-label[_ngcontent-%COMP%] {\\n  font-size: 26px;\\n  margin-bottom: 10px;\\n  color: midnightblue;\\n  font-family: Bahnschrift;\\n\\n}\\n\\n.form-input[_ngcontent-%COMP%] {\\n  border: none;\\n  border-bottom: 2px solid midnightblue;\\n  padding: 8px 12px;\\n  font-size: 18px;\\n  width: 105%;\\n  margin-bottom: 20px;\\n  transition: border-color 0.3s;\\n}\\n\\n.form-input[_ngcontent-%COMP%]:focus {\\n  outline: none;\\n  border-color: #e74c3c;\\n}\\n\\n.submit-button[_ngcontent-%COMP%] {\\n  margin-top: 40px;\\n  margin-left: 50px;\\n  background-color: midnightblue;\\n  border: none;\\n  color: white;\\n  padding: 10px 20px;\\n  font-size: 14px;\\n  cursor: pointer;\\n  border-radius: 4px;\\n  transition: background-color 0.3s;\\n}\\n\\n.submit-button[_ngcontent-%COMP%]:hover {\\n  background-color: #306280;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcmVzZXQtcGFzc3dvcmQvcmVzZXQtcGFzc3dvcmQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTs7QUFFQTtFQUNFLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsbUJBQW1CO0VBQ25CLGFBQWE7QUFDZjs7QUFFQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsZUFBZTtFQUNmLG1CQUFtQjtFQUNuQixtQkFBbUI7RUFDbkIsd0JBQXdCOztBQUUxQjs7QUFFQTtFQUNFLFlBQVk7RUFDWixxQ0FBcUM7RUFDckMsaUJBQWlCO0VBQ2pCLGVBQWU7RUFDZixXQUFXO0VBQ1gsbUJBQW1CO0VBQ25CLDZCQUE2QjtBQUMvQjs7QUFFQTtFQUNFLGFBQWE7RUFDYixxQkFBcUI7QUFDdkI7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsaUJBQWlCO0VBQ2pCLDhCQUE4QjtFQUM5QixZQUFZO0VBQ1osWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixlQUFlO0VBQ2YsZUFBZTtFQUNmLGtCQUFrQjtFQUNsQixpQ0FBaUM7QUFDbkM7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0IiLCJzb3VyY2VzQ29udGVudCI6WyIqe1xuXG59XG5cbi5mb3JtLWdyb3VwIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGhlaWdodDogMTAwdmg7XG59XG5cbi5yZXNldC1mb3JtIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmZvcm0tbGFiZWwge1xuICBmb250LXNpemU6IDI2cHg7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gIGNvbG9yOiBtaWRuaWdodGJsdWU7XG4gIGZvbnQtZmFtaWx5OiBCYWhuc2NocmlmdDtcblxufVxuXG4uZm9ybS1pbnB1dCB7XG4gIGJvcmRlcjogbm9uZTtcbiAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkIG1pZG5pZ2h0Ymx1ZTtcbiAgcGFkZGluZzogOHB4IDEycHg7XG4gIGZvbnQtc2l6ZTogMThweDtcbiAgd2lkdGg6IDEwNSU7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gIHRyYW5zaXRpb246IGJvcmRlci1jb2xvciAwLjNzO1xufVxuXG4uZm9ybS1pbnB1dDpmb2N1cyB7XG4gIG91dGxpbmU6IG5vbmU7XG4gIGJvcmRlci1jb2xvcjogI2U3NGMzYztcbn1cblxuLnN1Ym1pdC1idXR0b24ge1xuICBtYXJnaW4tdG9wOiA0MHB4O1xuICBtYXJnaW4tbGVmdDogNTBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogbWlkbmlnaHRibHVlO1xuICBib3JkZXI6IG5vbmU7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgcGFkZGluZzogMTBweCAyMHB4O1xuICBmb250LXNpemU6IDE0cHg7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3M7XG59XG5cbi5zdWJtaXQtYnV0dG9uOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzMwNjI4MDtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["Validators","Swal","ResetPasswordComponent","constructor","route","formBuilder","authenticationService","resetForm","group","email","required","resetPassword","get","value","console","log","getUserByEmail","subscribe","data","user","paramMap","params","resetToken","localStorage","setItem","fire","icon","title","showConfirmButton","timer","location","reload","i0","ɵɵdirectiveInject","i1","ActivatedRoute","i2","FormBuilder","i3","AuthenticationService","selectors","decls","vars","consts","template","ResetPasswordComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","ResetPasswordComponent_Template_button_click_6_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\21651\\Desktop\\projet-talan\\projet-talan\\GeoTrackr-developFront\\src\\app\\reset-password\\reset-password.component.ts","C:\\Users\\21651\\Desktop\\projet-talan\\projet-talan\\GeoTrackr-developFront\\src\\app\\reset-password\\reset-password.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {AuthenticationService} from \"../../services/authentication.service\";\nimport {error} from \"jquery\";\nimport {User} from \"../../models/User\";\nimport { ActivatedRoute } from '@angular/router';\nimport Swal from \"sweetalert2\";\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\nexport class ResetPasswordComponent {\n  resetForm: FormGroup;\n  user:any\n  constructor(private route: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private authenticationService: AuthenticationService\n  ) {\n    this.resetForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]]\n    });\n  }\n\n\n\n  resetPassword(){\n    const email = this.resetForm.get('email')?.value;\n    console.log(email);\n     this.authenticationService.getUserByEmail(email).subscribe(\n       (data:any)=>{\n         this.user=data;\n         console.log(this.user[\"resetToken\"]);\n         this.route.paramMap.subscribe(params => {\n           const resetToken = params.get(this.user[\"resetToken\"]);\n           localStorage.setItem(\"resetToken\",this.user[\"resetToken\"]);\n           // Now you can use the 'resetToken' parameter in your component logic\n           console.log('Reset Token:', resetToken);\n         });\n       }\n     );\n\n    this.authenticationService.resetPassword(email).subscribe(\n      (data:any)=>{\n        Swal.fire({\n          icon: 'success',\n          title: 'Email a été envoyé à votre adresse mail',\n          showConfirmButton: false,\n          timer: 3500\n        });\n        location.reload();\n\n        localStorage.setItem(\"resetMail\",email);\n        console.log('Password reset email sent successfully!');\n      }\n\n    )\n\n  }\n\n}\n","<div class=\"form-group\">\n  <div>\n  <form [formGroup]=\"resetForm\" class=\"reset-form\">\n    <label for=\"email\" class=\"form-label\">Adresse mail:</label>\n    <input\n      class=\"form-input\"\n      name=\"email\"\n      formControlName=\"email\"\n      type=\"email\"\n      id=\"email\"\n    />\n  </form>\n</div>\n<button class=\"submit-button\" (click)=\"resetPassword()\">Submit</button>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}