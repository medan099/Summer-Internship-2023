{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport Swal from \"sweetalert2\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../../services/authentication.service\";\nexport class ChangePassComponent {\n  constructor(route, router, formBuilder, authenticationService) {\n    this.route = route;\n    this.router = router;\n    this.formBuilder = formBuilder;\n    this.authenticationService = authenticationService;\n    this.resetForm = this.formBuilder.group({\n      newPass: ['', [Validators.required, Validators.email]]\n    });\n  }\n  ngOnInit() {\n    this.route.queryParamMap.subscribe(params => {\n      const resetToken = params.get('token');\n      // Now you can use the 'resetToken' query parameter in your component logic\n      console.log('Reset Token:', resetToken);\n      // You can use the resetToken to identify the user for password reset\n    });\n  }\n\n  resetPassword() {\n    const email = this.resetForm.get('email')?.value;\n    console.log(email);\n    this.authenticationService.resetPassword(email).subscribe(data => {\n      console.log('Password reset email sent successfully!');\n    });\n  }\n  changePassword() {\n    const newPass = this.resetForm.get('newPass')?.value;\n    const token = localStorage.getItem(\"resetToken\");\n    const requestData = {\n      email: '',\n      resetToken: token ? token : '',\n      newPass: newPass\n    };\n    this.authenticationService.changePass(requestData).subscribe(response => {\n      Swal.fire({\n        icon: 'success',\n        title: 'Mot de passe changé avec succés',\n        showConfirmButton: false,\n        timer: 2500\n      });\n      this.router.navigate([\"\"]);\n      console.log(\"MOT de passe changé\");\n      localStorage.clear();\n    });\n  }\n}\nChangePassComponent.ɵfac = function ChangePassComponent_Factory(t) {\n  return new (t || ChangePassComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.AuthenticationService));\n};\nChangePassComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChangePassComponent,\n  selectors: [[\"app-change-pass\"]],\n  decls: 8,\n  vars: 1,\n  consts: [[1, \"form-group\"], [1, \"reset-form\", 3, \"formGroup\"], [\"for\", \"newPass\", 1, \"form-label\"], [\"name\", \"newPass\", \"formControlName\", \"newPass\", \"type\", \"password\", \"id\", \"newPass\", 1, \"form-input\"], [1, \"submit-button\", 3, \"click\"]],\n  template: function ChangePassComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\")(2, \"form\", 1)(3, \"label\", 2);\n      i0.ɵɵtext(4, \"Nouveau mot de passe :\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"input\", 3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function ChangePassComponent_Template_button_click_6_listener() {\n        return ctx.changePassword();\n      });\n      i0.ɵɵtext(7, \"Submit\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.resetForm);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\".form-group[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 100vh;\\n}\\n\\n.reset-form[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n}\\n\\n.form-label[_ngcontent-%COMP%] {\\n  font-size: 26px;\\n  margin-bottom: 10px;\\n  color: midnightblue;\\n  font-family: Bahnschrift;\\n\\n}\\n\\n.form-input[_ngcontent-%COMP%] {\\n  border: none;\\n  border-bottom: 2px solid midnightblue;\\n  padding: 8px 12px;\\n  font-size: 18px;\\n  width: 105%;\\n  margin-bottom: 20px;\\n  transition: border-color 0.3s;\\n}\\n\\n.form-input[_ngcontent-%COMP%]:focus {\\n  outline: none;\\n  border-color: #e74c3c;\\n}\\n\\n.submit-button[_ngcontent-%COMP%] {\\n  margin-top: 40px;\\n  margin-left: 50px;\\n  background-color: midnightblue;\\n  border: none;\\n  color: white;\\n  padding: 10px 20px;\\n  font-size: 14px;\\n  cursor: pointer;\\n  border-radius: 4px;\\n  transition: background-color 0.3s;\\n}\\n\\n.submit-button[_ngcontent-%COMP%]:hover {\\n  background-color: #306280;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY2hhbmdlLXBhc3MvY2hhbmdlLXBhc3MuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsbUJBQW1CO0VBQ25CLGFBQWE7QUFDZjs7QUFFQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsZUFBZTtFQUNmLG1CQUFtQjtFQUNuQixtQkFBbUI7RUFDbkIsd0JBQXdCOztBQUUxQjs7QUFFQTtFQUNFLFlBQVk7RUFDWixxQ0FBcUM7RUFDckMsaUJBQWlCO0VBQ2pCLGVBQWU7RUFDZixXQUFXO0VBQ1gsbUJBQW1CO0VBQ25CLDZCQUE2QjtBQUMvQjs7QUFFQTtFQUNFLGFBQWE7RUFDYixxQkFBcUI7QUFDdkI7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsaUJBQWlCO0VBQ2pCLDhCQUE4QjtFQUM5QixZQUFZO0VBQ1osWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixlQUFlO0VBQ2YsZUFBZTtFQUNmLGtCQUFrQjtFQUNsQixpQ0FBaUM7QUFDbkM7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0IiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9ybS1ncm91cCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBoZWlnaHQ6IDEwMHZoO1xufVxuXG4ucmVzZXQtZm9ybSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5mb3JtLWxhYmVsIHtcbiAgZm9udC1zaXplOiAyNnB4O1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICBjb2xvcjogbWlkbmlnaHRibHVlO1xuICBmb250LWZhbWlseTogQmFobnNjaHJpZnQ7XG5cbn1cblxuLmZvcm0taW5wdXQge1xuICBib3JkZXI6IG5vbmU7XG4gIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCBtaWRuaWdodGJsdWU7XG4gIHBhZGRpbmc6IDhweCAxMnB4O1xuICBmb250LXNpemU6IDE4cHg7XG4gIHdpZHRoOiAxMDUlO1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICB0cmFuc2l0aW9uOiBib3JkZXItY29sb3IgMC4zcztcbn1cblxuLmZvcm0taW5wdXQ6Zm9jdXMge1xuICBvdXRsaW5lOiBub25lO1xuICBib3JkZXItY29sb3I6ICNlNzRjM2M7XG59XG5cbi5zdWJtaXQtYnV0dG9uIHtcbiAgbWFyZ2luLXRvcDogNDBweDtcbiAgbWFyZ2luLWxlZnQ6IDUwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6IG1pZG5pZ2h0Ymx1ZTtcbiAgYm9yZGVyOiBub25lO1xuICBjb2xvcjogd2hpdGU7XG4gIHBhZGRpbmc6IDEwcHggMjBweDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzO1xufVxuXG4uc3VibWl0LWJ1dHRvbjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMDYyODA7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["Validators","Swal","ChangePassComponent","constructor","route","router","formBuilder","authenticationService","resetForm","group","newPass","required","email","ngOnInit","queryParamMap","subscribe","params","resetToken","get","console","log","resetPassword","value","data","changePassword","token","localStorage","getItem","requestData","changePass","response","fire","icon","title","showConfirmButton","timer","navigate","clear","i0","ɵɵdirectiveInject","i1","ActivatedRoute","Router","i2","FormBuilder","i3","AuthenticationService","selectors","decls","vars","consts","template","ChangePassComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","ChangePassComponent_Template_button_click_6_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\21651\\Desktop\\projet-talan\\projet-talan\\GeoTrackr-developFront\\src\\app\\change-pass\\change-pass.component.ts","C:\\Users\\21651\\Desktop\\projet-talan\\projet-talan\\GeoTrackr-developFront\\src\\app\\change-pass\\change-pass.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {AuthenticationService} from \"../../services/authentication.service\";\nimport {Router} from \"@angular/router\";\nimport {PasswordResetRequest} from \"../../models/PasswordResetRequest\";\nimport Swal from \"sweetalert2\";\n\n\n@Component({\n  selector: 'app-change-pass',\n  templateUrl: './change-pass.component.html',\n  styleUrls: ['./change-pass.component.css']\n})\nexport class ChangePassComponent {\n\n  resetForm: FormGroup;\n\n  constructor(private route: ActivatedRoute,\n    private router:Router,\n    private formBuilder: FormBuilder,\n    private authenticationService: AuthenticationService\n  ) {\n    this.resetForm = this.formBuilder.group({\n      newPass: ['', [Validators.required, Validators.email]]\n    });\n  }\n  ngOnInit() {\n    this.route.queryParamMap.subscribe(params => {\n      const resetToken = params.get('token');\n      // Now you can use the 'resetToken' query parameter in your component logic\n      console.log('Reset Token:', resetToken);\n      // You can use the resetToken to identify the user for password reset\n    });\n  }\n\n  resetPassword(){\n    const email = this.resetForm.get('email')?.value;\n    console.log(email);\n    this.authenticationService.resetPassword(email).subscribe(\n      (data:any)=>{\n        console.log('Password reset email sent successfully!');\n      }\n\n    )\n  }\n\n  changePassword(){\n    const newPass = this.resetForm.get('newPass')?.value;\n   const token=localStorage.getItem(\"resetToken\");\n    const requestData: PasswordResetRequest = {\n      email: '', // You should set the email value here\n      resetToken: token ? token : '',\n      newPass: newPass\n    };\n    this.authenticationService.changePass(requestData).subscribe(\n      (response:any)=>{\n        Swal.fire({\n          icon: 'success',\n          title: 'Mot de passe changé avec succés',\n          showConfirmButton: false,\n          timer: 2500\n        });\n        this.router.navigate([\"\"])\n      console.log(\"MOT de passe changé\");\n      localStorage.clear();\n      }\n    );\n  }\n\n}\n","<div class=\"form-group\">\n  <div>\n    <form [formGroup]=\"resetForm\" class=\"reset-form\">\n      <label for=\"newPass\" class=\"form-label\">Nouveau mot de passe :</label>\n      <input\n        class=\"form-input\"\n        name=\"newPass\"\n        formControlName=\"newPass\"\n        type=\"password\"\n        id=\"newPass\"\n      />\n    </form>\n  </div>\n  <button class=\"submit-button\" (click)=\"changePassword()\">Submit</button>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}